# It's good practice to specify the version of the Docker Compose file format.
version: '3.8'

services:
  # Your ASP.NET Core API Service
  backend:
    build: .
    ports:
      - "8080:80"
    environment:
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__DefaultConnection: "Host=db;Port=5432;Database=VexaFit;User Id=postgres;Password=saadaswad"
    depends_on:
      db:
        # This condition ensures the backend only starts after the database is fully
        # initialized and ready to accept connections, preventing startup errors.
        condition: service_healthy

  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    restart: always # Ensures the database restarts if it fails for any reason.
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: saadaswad
      POSTGRES_DB: VexaFit
    ports:
      # Exposing the port is useful for connecting directly with a DB client from your host machine.
      - "5432:5432"
    volumes:
      # This named volume persists your database data across container restarts.
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      # This command uses the pg_isready utility to check if the PostgreSQL server is ready.
      test: ["CMD-SHELL", "pg_isready -U postgres -d VexaFit"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

# This top-level key declares the named volume for Docker to manage.
volumes:
  pgdata:
